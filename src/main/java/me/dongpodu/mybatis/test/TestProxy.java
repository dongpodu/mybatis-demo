package me.dongpodu.mybatis.test;import java.lang.reflect.InvocationHandler;import java.lang.reflect.Method;import java.lang.reflect.Proxy;public class TestProxy {    interface TestInterface {        void test();    }    static class TestInvocationHandler implements InvocationHandler {        @Override        public Object invoke(Object proxy, Method method, Object[] args) throws Throwable {            System.out.println("call TestInvocationHandler start");            System.out.println("call TestInvocationHandler end");            return null;        }    }    public static void main(String[] args) {        System.setProperty("jdk.proxy.ProxyGenerator.saveGeneratedFiles", "true");        var handler = new TestInvocationHandler();        var proxy = (TestInterface) Proxy.newProxyInstance(TestInterface.class.getClassLoader(),                new Class[]{TestInterface.class}, handler);        proxy.test();    }}